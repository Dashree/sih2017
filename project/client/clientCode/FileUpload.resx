<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>