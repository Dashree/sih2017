<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        WYabAAAAAElFTkSuQmCC
</value>
  </data>
</root>